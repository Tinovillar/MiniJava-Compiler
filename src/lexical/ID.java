package lexical;

public enum ID {
    kw_class,
    kw_extends,
    kw_public,
    kw_static,
    kw_void,
    kw_boolean,
    kw_char,
    kw_int,
    kw_abstract,
    kw_final,
    kw_if,
    kw_else,
    kw_while,
    kw_for,
    kw_return,
    kw_var,
    kw_this,
    kw_new,
    kw_null,
    kw_true,
    kw_false,

    op_equal,
    op_equal_equal,
    op_not_equal,
    op_not,
    op_greater_than,
    op_greater_than_equal,
    op_less_than,
    op_less_than_equal,
    op_plus,
    op_plus_plus,
    op_minus,
    op_minus_minus,
    op_multiplication,
    op_division,
    op_and,
    op_or,
    op_mod,
    p_question_mark,
    p_o_parenthesis,
    p_c_parenthesis,
    p_o_bracket1,
    p_c_bracket1,
    p_o_bracket2,
    p_c_bracket2,
    p_dot,
    p_comma,
    p_colon,
    p_semicolon,
    literal_char,
    literal_string,
    literal_integer,
    id_met_or_var,
    id_class,
    EOF
}
